name: Deploy CDK Application

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "23"
            - name: Install Dependencies (canvas)
              run: |
                  sudo apt update
                  sudo apt install -y libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev librsvg2-dev
            - name: Install dependencies (CDK)
              run: npm install -g pnpm && pnpm install
              working-directory: deploy/

            - name: Install dependencies (App)
              run: pnpm install

            - name: Install AWS CDK
              run: npm install -g aws-cdk

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-west-1
            - name: Deploy CDK Stack
              env:
                  STAGE: prod
                  TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
                  DISCORD_APPLICATION_ID: ${{ secrets.DISCORD_APP_ID }}
                  DISCORD_API_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
                  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
                  REDPILL_API_KEY: ${{ secrets.REDPILL_API_KEY }}
                  GROK_API_KEY: ${{ secrets.GROK_API_KEY }}
                  GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
                  OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
                  GOOGLE_GENERATIVE_AI_API_KEY: ${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}
                  LUMA_API_KEY: ${{ secrets.LUMA_API_KEY }}
                  ELEVENLABS_XI_API_KEY: ${{ secrets.ELEVENLABS_XI_API_KEY }}
              run: cdk deploy --require-approval never --all
              working-directory: deploy/
